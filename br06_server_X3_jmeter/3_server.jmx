<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.9" jmeter="3.0 r1743807">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="測試計畫" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="TCIT" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="迴圈控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1466746341000</longProp>
        <longProp name="ThreadGroup.end_time">1466746341000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定值計時器" enabled="true">
          <stringProp name="ConstantTimer.delay">1000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TCIT sendImg" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/neon/projects/jmeter/367172-XXL.jpg" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/neon/projects/jmeter/367172-XXL.jpg</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.107</stringProp>
          <stringProp name="HTTPSampler.port">8800</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/storage/upload</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正規表示式剖析器" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">ImageId</stringProp>
            <stringProp name="RegexExtractor.regex">{&quot;img_id&quot;:&quot;(.*)&quot;.*</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IMG</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.img_id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TCIT Face Detection" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="img_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${IMG}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">img_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.107</stringProp>
          <stringProp name="HTTPSampler.port">8800</stringProp>
          <stringProp name="HTTPSampler.proxyHost">{}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/face/detection/detect</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">FID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.faces[0].face_id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TCIT Face Person Update" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="person_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">32e08da03bb647258dd1ac8583d768ad</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">person_id</stringProp>
              </elementProp>
              <elementProp name="face_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${FID}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">face_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.107</stringProp>
          <stringProp name="HTTPSampler.port">8800</stringProp>
          <stringProp name="HTTPSampler.proxyHost">{}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/face/person/update/add/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TCIT person create" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.107</stringProp>
          <stringProp name="HTTPSampler.port">8800</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/face/person/create</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TCIT person_list" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.107</stringProp>
          <stringProp name="HTTPSampler.port">8800</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/face/query/person_list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">PID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.persons[0]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TCIT person delete" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="person_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${PID}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">person_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.107</stringProp>
          <stringProp name="HTTPSampler.port">8800</stringProp>
          <stringProp name="HTTPSampler.proxyHost">{}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/face/person/delete</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TCIT group list" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.107</stringProp>
          <stringProp name="HTTPSampler.port">8800</stringProp>
          <stringProp name="HTTPSampler.proxyHost">{}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/face/query/group_list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="檢視結果樹" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="彙整報告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="檢視表格式結果" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="結果圖形" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="TCIT face id" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="迴圈控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">200</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1466746341000</longProp>
        <longProp name="ThreadGroup.end_time">1466746341000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP 要求預設值" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.107</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定值計時器" enabled="true">
          <stringProp name="ConstantTimer.delay">1000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TCIT sendImg" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/neon/projects/jmeter/367172-XXL.jpg" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/neon/projects/jmeter/367172-XXL.jpg</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.107</stringProp>
          <stringProp name="HTTPSampler.port">8800</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/storage/upload</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IMG</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.img_id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TCIT Face Detection" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="img_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${IMG}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">img_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.107</stringProp>
          <stringProp name="HTTPSampler.port">8800</stringProp>
          <stringProp name="HTTPSampler.proxyHost">{}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/face/detection/detect</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">FID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.faces[0].face_id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="檢視結果樹" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="彙整報告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">200</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1469174538000</longProp>
        <longProp name="ThreadGroup.end_time">1469174538000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/neon/projects/jmeter/367172-XXL.jpg" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/neon/projects/jmeter/367172-XXL.jpg</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FRUserId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FRUserId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.107</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">1000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="API" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="迴圈控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <longProp name="ThreadGroup.start_time">1464868528000</longProp>
        <longProp name="ThreadGroup.end_time">1464868528000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="userlist" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;Field&quot;: &quot;FRUserId&quot;, &#xd;
	&quot;Keyword&quot;: &quot;1&quot;, &#xd;
	&quot;FlipPage&quot;: 1&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.93</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/user/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">US</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.Users</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/user update" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
         	&quot;FRUserId&quot;:&quot;0&quot;,&#xd;
         	&quot;Name&quot;:&quot;0&quot;,&#xd;
         	&quot;Gender&quot;: &quot;Female&quot;, &#xd;
         	&quot;RFIDCard&quot;: &quot;8512&quot;, &#xd;
         	&quot;State&quot;: &quot;Enable&quot;, &#xd;
         	&quot;Age&quot;: 9, &#xd;
	        &quot;Groups&quot;: [&#xd;
        {&#xd;
          &quot;Name&quot;: &quot;g0&quot;,&#xd;
          &quot;OId&quot;: &quot;fa567f64-3f5d-11e6-9638-80ee73b8c37e&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;Name&quot;: &quot;g1&quot;,&#xd;
          &quot;OId&quot;: &quot;fc2da934-3f5d-11e6-9638-80ee73b8c37e&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;Name&quot;: &quot;g2&quot;,&#xd;
          &quot;OId&quot;: &quot;fc3d0c3a-3f5d-11e6-9638-80ee73b8c37e&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;Name&quot;: &quot;g3&quot;,&#xd;
          &quot;OId&quot;: &quot;fc473728-3f5d-11e6-9638-80ee73b8c37e&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;Name&quot;: &quot;g4&quot;,&#xd;
          &quot;OId&quot;: &quot;fc5167f2-3f5d-11e6-9638-80ee73b8c37e&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;Name&quot;: &quot;g5&quot;,&#xd;
          &quot;OId&quot;: &quot;fc56814c-3f5d-11e6-9638-80ee73b8c37e&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;Name&quot;: &quot;g6&quot;,&#xd;
          &quot;OId&quot;: &quot;fc5b95b0-3f5d-11e6-9638-80ee73b8c37e&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;Name&quot;: &quot;g7&quot;,&#xd;
          &quot;OId&quot;: &quot;fc60b2ca-3f5d-11e6-9638-80ee73b8c37e&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;Name&quot;: &quot;g8&quot;,&#xd;
          &quot;OId&quot;: &quot;fc65c65c-3f5d-11e6-9638-80ee73b8c37e&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;Name&quot;: &quot;g9&quot;,&#xd;
          &quot;OId&quot;: &quot;fc6adf52-3f5d-11e6-9638-80ee73b8c37e&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;Name&quot;: &quot;g10&quot;,&#xd;
          &quot;OId&quot;: &quot;fc6ff55a-3f5d-11e6-9638-80ee73b8c37e&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;Name&quot;: &quot;g11&quot;,&#xd;
          &quot;OId&quot;: &quot;fc750ec8-3f5d-11e6-9638-80ee73b8c37e&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;Name&quot;: &quot;g12&quot;,&#xd;
          &quot;OId&quot;: &quot;fc7a2692-3f5d-11e6-9638-80ee73b8c37e&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;Name&quot;: &quot;g13&quot;,&#xd;
          &quot;OId&quot;: &quot;fc7f4028-3f5d-11e6-9638-80ee73b8c37e&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;Name&quot;: &quot;g14&quot;,&#xd;
          &quot;OId&quot;: &quot;fc8455e0-3f5d-11e6-9638-80ee73b8c37e&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;Name&quot;: &quot;g15&quot;,&#xd;
          &quot;OId&quot;: &quot;fc896d14-3f5d-11e6-9638-80ee73b8c37e&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;Name&quot;: &quot;g16&quot;,&#xd;
          &quot;OId&quot;: &quot;fc8e865a-3f5d-11e6-9638-80ee73b8c37e&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;Name&quot;: &quot;g17&quot;,&#xd;
          &quot;OId&quot;: &quot;fc939c76-3f5d-11e6-9638-80ee73b8c37e&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;Name&quot;: &quot;g18&quot;,&#xd;
          &quot;OId&quot;: &quot;fc98b0f8-3f5d-11e6-9638-80ee73b8c37e&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;Name&quot;: &quot;g19&quot;,&#xd;
          &quot;OId&quot;: &quot;fc9dcc3c-3f5d-11e6-9638-80ee73b8c37e&quot;&#xd;
        }&#xd;
    ]&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">10.0.3.197</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/user/update</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">pass</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.pass</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="api group llist1" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.93</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/group/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">GS</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.Groups</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/face/add100" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="C:\Users\neon_chen\Desktop\miranda_kerr_face_girl_20131015_1755444175.jpg" elementType="HTTPFileArg">
                <stringProp name="File.path">C:\Users\neon_chen\Desktop\miranda_kerr_face_girl_20131015_1755444175.jpg</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FRUserId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FRUserId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">10.0.3.87</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/face/add</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face identify 7" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="C:\Users\neon_chen\Desktop\miranda_kerr_face_girl_20131015_1755444175.jpg" elementType="HTTPFileArg">
                <stringProp name="File.path">C:\Users\neon_chen\Desktop\miranda_kerr_face_girl_20131015_1755444175.jpg</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">10.0.3.87</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/face/identify</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face add" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/neon/下載/0022_2_20170221134808.jpg" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/neon/下載/0022_2_20170221134808.jpg</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FRUserId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">a2512</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FRUserId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.93</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/face/add</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">pass</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.pass</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face delete" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;FRUserId&quot;: &quot;9090&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">10.0.3.197</stringProp>
          <stringProp name="HTTPSampler.port">80</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/face/delete</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face list1" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;FRUserId&quot;: &quot;b1667&quot;,&#xd;
    &quot;FaceIndex&quot;: 2&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.93</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/face/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face verify" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/neon/下載/0033_1_20170221134844.jpg" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/neon/下載/0033_1_20170221134844.jpg</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FRUserId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">a2512</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FRUserId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.93</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/face/verify</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1508661142">{&quot;Result&quot;: &quot;Pass&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face_identify" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/neon/下載/001_1_20170221134308.jpg" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/neon/下載/001_1_20170221134308.jpg</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.93</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/face/identify</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">FRUserId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.FRUserId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face_check" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/neon/projects/jmeter/367172-XXL.jpg" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/neon/projects/jmeter/367172-XXL.jpg</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.174</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/face/check</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">Code</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.Code</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rfid_verify" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;RFIDCard&quot;:&quot;2512&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.93</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/RFID/verify</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">FID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.FRUserId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rfid_check" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;RFIDCard&quot;:&quot;2512&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.93</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/RFID/check</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">				</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-33790176">{&quot;Result&quot;: &quot;Success&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="fruser add" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{   &#xd;
    &quot;FRUserId&quot;:&quot;2222222222&quot;, &#xd;
    &quot;Name&quot;: &quot;2222222222&quot;, &#xd;
    &quot;Gender&quot;: &quot;Female&quot;, &#xd;
    &quot;Age&quot;: 1, &#xd;
    &quot;RFIDCard&quot;: &quot;2222222222&quot;, &#xd;
    &quot;State&quot;: &quot;Enable&quot;, &#xd;
    &quot;Groups&quot;: [&#xd;
        {&#xd;
            &quot;OId&quot;: &quot;11579674-28ae-11e6-bd82-c860007009ce&quot;,&#xd;
            &quot;Name&quot;: &quot;group_test4&quot;&#xd;
            &#xd;
        }    &#xd;
    ]&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">10.0.3.87</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/user/add</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/face/person/verify" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="C:\Users\neon_chen\Desktop\9527_20160524163707.jpg" elementType="HTTPFileArg">
                <stringProp name="File.path">C:\Users\neon_chen\Desktop\9527_20160524163707.jpg</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FRUserId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FRUserId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">10.0.3.124</stringProp>
          <stringProp name="HTTPSampler.port">8800</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/face/person/verify</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Connection Check" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;Name&quot;:&quot;neon_d&quot;,&#xd;
	&quot;MAC&quot;:&quot;EEEEEEEE&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.109</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/connection/check</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">PASS</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.pass</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">3</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Device Config Get" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;MAC&quot;:&quot;AAAAAAAA&quot;&#xd;
	}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.203</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/connection/get</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">Model</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.Model</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Device Config set" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;Name&quot;: &quot;neon110&quot;, &#xd;
	&quot;Model&quot;: &quot;FR&quot;, &#xd;
	&quot;Language&quot;: &quot;en&quot;, &#xd;
	&quot;NTP&quot;: &quot;118.163.81.61&quot;, &#xd;
	&quot;FingerBioScore&quot;: &quot;Low&quot;, &#xd;
	&quot;AccessDeniedR0Pulse&quot;: &quot;1&quot;, &#xd;
	&quot;Timezone&quot;: &quot;(UTC) London, Dublin, Edinburgh, Lisbon&quot;, &#xd;
	&quot;AccessDeniedR0Action&quot;: &quot;None&quot;, &#xd;
	&quot;ScreenSaver&quot;: &quot;5&quot;, &#xd;
	&quot;FaceBioScore&quot;: &quot;Low&quot;, &#xd;
	&quot;WelcomeR1Pulse&quot;: &quot;1&quot;, &#xd;
	&quot;Result&quot;: &quot;Success&quot;, &#xd;
	&quot;Audio&quot;: &quot;Enable&quot;, &#xd;
	&quot;WelcomeR1Action&quot;: &quot;None&quot;, &#xd;
	&quot;WelcomeR0Action&quot;: &quot;None&quot;, &#xd;
	&quot;Timeout&quot;: &quot;10&quot;, &#xd;
	&quot;WelcomeR0Pulse&quot;: &quot;1&quot;,&#xd;
	&quot;Type&quot;: &quot;Register&quot;,&#xd;
	&quot;AccessDeniedR1Action&quot;: &quot;None&quot;,&#xd;
	&quot;AccessDeniedR1Pulse&quot;: &quot;1&quot;,&#xd;
	&quot;Version&quot;:&quot;1&quot;,&#xd;
	&quot;MAC&quot;:&quot;AAAAAAAA&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.93</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/connection/set</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-33790176">{&quot;Result&quot;: &quot;Success&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="user delete" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;FRUserId&quot;: &quot;9999&quot;&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.93</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/user/delete</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="354301117">(Error cause by Frusers matching query does not exist|{&quot;Result&quot;: &quot;Success&quot;})</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="user add" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;FRUserId&quot;:&quot;9999&quot;,&#xd;
        &quot;Name&quot;:&quot;9999&quot;,&#xd;
        &quot;Gender&quot;: &quot;Female&quot;, &#xd;
        &quot;RFIDCard&quot;: &quot;&quot;, &#xd;
        &quot;State&quot;: &quot;Enable&quot;, &#xd;
        &quot;Age&quot;: 1, &#xd;
        	&quot;Groups&quot;: [&#xd;
		{&quot;OId&quot;: &quot;0f0a5cd0-15e8-11e7-996c-80ee73beb1f3&quot;, &quot;Name&quot;: &quot;neon_g0&quot;},&#xd;
		{&quot;OId&quot;: &quot;0f97a23e-157a-11e7-8efa-80ee73af4cf5&quot;, &quot;Name&quot;: &quot;neon_g1&quot;}, &#xd;
		{&quot;OId&quot;: &quot;0fb47328-157a-11e7-8efa-80ee73af4cf5&quot;, &quot;Name&quot;: &quot;neon_g2&quot;},&#xd;
		{&quot;OId&quot;: &quot;0fc572d6-157a-11e7-8efa-80ee73af4cf5&quot;, &quot;Name&quot;: &quot;neon_g3&quot;}, &#xd;
		{&quot;OId&quot;: &quot;0fd156aa-157a-11e7-8efa-80ee73af4cf5&quot;, &quot;Name&quot;: &quot;neon_g4&quot;}, &#xd;
		{&quot;OId&quot;: &quot;0fdd3376-157a-11e7-8efa-80ee73af4cf5&quot;, &quot;Name&quot;: &quot;neon_g5&quot;}, &#xd;
		{&quot;OId&quot;: &quot;0fe90fd4-157a-11e7-8efa-80ee73af4cf5&quot;, &quot;Name&quot;: &quot;neon_g6&quot;},&#xd;
		{&quot;OId&quot;: &quot;0ff4f1dc-157a-11e7-8efa-80ee73af4cf5&quot;, &quot;Name&quot;: &quot;neon_g7&quot;},&#xd;
		{&quot;OId&quot;: &quot;1000cdd6-157a-11e7-8efa-80ee73af4cf5&quot;, &quot;Name&quot;: &quot;neon_g8&quot;}, &#xd;
		{&quot;OId&quot;: &quot;100ca502-157a-11e7-8efa-80ee73af4cf5&quot;, &quot;Name&quot;: &quot;neon_g9&quot;}, &#xd;
		{&quot;OId&quot;: &quot;1018970e-157a-11e7-8efa-80ee73af4cf5&quot;, &quot;Name&quot;: &quot;neon_g10&quot;}, &#xd;
		{&quot;OId&quot;: &quot;10247560-157a-11e7-8efa-80ee73af4cf5&quot;, &quot;Name&quot;: &quot;neon_g11&quot;},&#xd;
		{&quot;OId&quot;: &quot;10306262-157a-11e7-8efa-80ee73af4cf5&quot;, &quot;Name&quot;: &quot;neon_g12&quot;},&#xd;
		{&quot;OId&quot;: &quot;103c2f20-157a-11e7-8efa-80ee73af4cf5&quot;, &quot;Name&quot;: &quot;neon_g13&quot;}, &#xd;
		{&quot;OId&quot;: &quot;1048011a-157a-11e7-8efa-80ee73af4cf5&quot;, &quot;Name&quot;: &quot;neon_g14&quot;},&#xd;
		{&quot;OId&quot;: &quot;4c2e8ebc-1465-11e7-b234-80ee73beb200&quot;, &quot;Name&quot;: &quot;group1&quot;}, &#xd;
		{&quot;OId&quot;: &quot;4c3ef1ee-1465-11e7-b234-80ee73beb200&quot;, &quot;Name&quot;: &quot;group2&quot;}, &#xd;
		{&quot;OId&quot;: &quot;4cb24518-1465-11e7-b234-80ee73beb200&quot;, &quot;Name&quot;: &quot;group3&quot;}, &#xd;
		{&quot;OId&quot;: &quot;50f368e6-1064-11e7-aed2-80ee73beb1f3&quot;, &quot;Name&quot;: &quot;Default&quot;},&#xd;
		{&quot;OId&quot;: &quot;988736b0-1064-11e7-9afd-80ee73beb1f3&quot;, &quot;Name&quot;: &quot;yuantest&quot;}&#xd;
	]&#xd;
&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.93</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/user/add</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="566763538">({&quot;Result&quot;: &quot;Success&quot;}|Fruser fail to create cause by FRUser already exists|ata too long for column &apos;LogContent&apos; at|Duplicate entry)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="tquark user search" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;Field&quot;: &quot;Age&quot;, &#xd;
	&quot;Keyword&quot;: 1, &#xd;
	&quot;State&quot;: &quot;Enable&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.107</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/si/api/user/search</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">Users</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.Users</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="tquark user count 5" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.107</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/si/api/user/count</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">Numbers</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.Numbers</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="tquark user log_query 1.5" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;DeviceName&quot;: &quot;neon_d&quot;, &#xd;
	&quot;FRUserId&quot;: &quot;&quot;, &#xd;
	&quot;StartDateTime&quot;: &quot;2017-01-20 18:38:37&quot;,&#xd;
	&quot;EndDateTime&quot;: &quot;&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.107</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">si/api/log/users</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">Success</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.Success</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="user log seek for tauark customize" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.107</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">si/api/customize/tquark/log/seek</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">Success</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.Success</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="user log seek response for tauark customize 5" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">d</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.107</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">si/api/customize/tquark/log/read</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">Success</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.Success</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="檢視結果樹" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="165" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="迴圈控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">180</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <longProp name="ThreadGroup.start_time">1496404528000</longProp>
        <longProp name="ThreadGroup.end_time">1464868528000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="finger delete1" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;FRUserId&quot;:&quot;${frid1}&quot;&#xd;
	}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.165</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/finger/delete</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;aaaaaaaaaaaaaaaaaaa&quot;);

int threadNum = ctx.getThreadNum();
int loop = vars.getIteration();

log.info(&quot;threadNum =================== &quot; + threadNum);
log.info(&quot;loop =================== &quot; + loop);

int id = threadNum + 1 + 180 * (loop-1) ;
if (id &gt; 1499 ) {
	id = id -1499;
}

vars.put(&quot;frid1&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid1&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-202516509">Success</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="finger list1" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;FRUserId&quot;:&quot;${frid1}&quot;&#xd;
	}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.165</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/finger/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2615726">True</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;aaaaaaaaaaaaaaaaaaa&quot;);

int threadNum = ctx.getThreadNum();
int loop = vars.getIteration();

log.info(&quot;threadNum =================== &quot; + threadNum);
log.info(&quot;loop =================== &quot; + loop);

int id = threadNum + 1 + 180 * (loop-1) ;
if (id &gt; 1499 ) {
	id = id -1499;
}

vars.put(&quot;frid1&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid1&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="finger check1" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/mnt/smb/1876_1129140434445243_verify.bmp" elementType="HTTPFileArg">
                <stringProp name="File.path">/mnt/smb/1876_1129140434445243_verify.bmp</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FRUserId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${frid1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FRUserId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.165</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/finger/check</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;aaaaaaaaaaaaaaaaaaa&quot;);

int threadNum = ctx.getThreadNum();
int loop = vars.getIteration();

log.info(&quot;threadNum =================== &quot; + threadNum);
log.info(&quot;loop =================== &quot; + loop);

int id = threadNum + 1 + 180 * (loop-1) ;
if (id &gt; 1499 ) {
	id = id -1499;
}

vars.put(&quot;frid1&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid1&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-253666766">FRUserId</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="finger verify1" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/mnt/smb/1876_1129140434445243_verify.bmp" elementType="HTTPFileArg">
                <stringProp name="File.path">/mnt/smb/1876_1129140434445243_verify.bmp</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FRUserId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${frid1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FRUserId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.165</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/finger/verify</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;aaaaaaaaaaaaaaaaaaa&quot;);

int threadNum = ctx.getThreadNum();
int loop = vars.getIteration();

log.info(&quot;threadNum =================== &quot; + threadNum);
log.info(&quot;loop =================== &quot; + loop);

int id = threadNum + 1 + 180 * (loop-1) ;
if (id &gt; 1499 ) {
	id = id -1499;
}

vars.put(&quot;frid1&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid1&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-253666766">FRUserId</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="finger add1" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/mnt/smb/1876_1129140434445243_verify.bmp" elementType="HTTPFileArg">
                <stringProp name="File.path">/mnt/smb/1876_1129140434445243_verify.bmp</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FRUserId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${frid1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FRUserId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.165</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/finger/add</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;aaaaaaaaaaaaaaaaaaa&quot;);

int threadNum = ctx.getThreadNum();
int loop = vars.getIteration();

log.info(&quot;threadNum =================== &quot; + threadNum);
log.info(&quot;loop =================== &quot; + loop);

int id = threadNum + 1 + 180 * (loop-1) ;
if (id &gt; 1499 ) {
	id = id -1499;
}

vars.put(&quot;frid1&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid1&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1473007141">({&quot;Result&quot;: &quot;Success&quot;}|Fingerprint already exists)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face add1" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/media/neon/HGST4TNAS/project/django/br06/backup/import_users/1500/fruserpic/12900_2.jpg" elementType="HTTPFileArg">
                <stringProp name="File.path">/media/neon/HGST4TNAS/project/django/br06/backup/import_users/1500/fruserpic/12900_2.jpg</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FRUserId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${frid1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FRUserId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.165</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/face/add</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;aaaaaaaaaaaaaaaaaaaaaaaa&quot;);

int threadNum = ctx.getThreadNum();

log.info(&quot;threadNum =================== &quot; + threadNum);

int id = threadNum + 1;

vars.put(&quot;frid1&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid1&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="user add1" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;FRUserId&quot;:&quot;${frid1}&quot;,&#xd;
        &quot;Name&quot;:&quot;${frid1}&quot;,&#xd;
        &quot;Gender&quot;: &quot;Female&quot;, &#xd;
        &quot;RFIDCard&quot;: &quot;${frid1}&quot;, &#xd;
        &quot;State&quot;: &quot;Enable&quot;, &#xd;
        &quot;Age&quot;: 9999999, &#xd;
        &quot;Groups&quot;: [&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g1&quot;,&#xd;
      &quot;OId&quot;: &quot;83517d48-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g2&quot;,&#xd;
      &quot;OId&quot;: &quot;836791aa-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g3&quot;,&#xd;
      &quot;OId&quot;: &quot;83751f28-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g4&quot;,&#xd;
      &quot;OId&quot;: &quot;8382b598-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g5&quot;,&#xd;
      &quot;OId&quot;: &quot;83904280-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g6&quot;,&#xd;
      &quot;OId&quot;: &quot;839dcc66-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g7&quot;,&#xd;
      &quot;OId&quot;: &quot;83ab65c4-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g8&quot;,&#xd;
      &quot;OId&quot;: &quot;83baad22-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g9&quot;,&#xd;
      &quot;OId&quot;: &quot;83c83988-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g10&quot;,&#xd;
      &quot;OId&quot;: &quot;83d5c9f4-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g11&quot;,&#xd;
      &quot;OId&quot;: &quot;83e36276-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g12&quot;,&#xd;
      &quot;OId&quot;: &quot;83f29b06-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g13&quot;,&#xd;
      &quot;OId&quot;: &quot;840038ec-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g14&quot;,&#xd;
      &quot;OId&quot;: &quot;840dacde-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g15&quot;,&#xd;
      &quot;OId&quot;: &quot;841b490c-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g16&quot;,&#xd;
      &quot;OId&quot;: &quot;8428e422-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g17&quot;,&#xd;
      &quot;OId&quot;: &quot;843674ca-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g18&quot;,&#xd;
      &quot;OId&quot;: &quot;84440874-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g19&quot;,&#xd;
      &quot;OId&quot;: &quot;8451a1fa-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g20&quot;,&#xd;
      &quot;OId&quot;: &quot;845f33c4-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g21&quot;,&#xd;
      &quot;OId&quot;: &quot;846cbc6a-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g22&quot;,&#xd;
      &quot;OId&quot;: &quot;847a5230-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g23&quot;,&#xd;
      &quot;OId&quot;: &quot;8487e8be-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g24&quot;,&#xd;
      &quot;OId&quot;: &quot;84957858-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g25&quot;,&#xd;
      &quot;OId&quot;: &quot;84a2f2da-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g26&quot;,&#xd;
      &quot;OId&quot;: &quot;84b07a9a-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g27&quot;,&#xd;
      &quot;OId&quot;: &quot;84bfdabc-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g28&quot;,&#xd;
      &quot;OId&quot;: &quot;84d0c00c-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g29&quot;,&#xd;
      &quot;OId&quot;: &quot;84e00eb8-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g30&quot;,&#xd;
      &quot;OId&quot;: &quot;84f0f052-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g31&quot;,&#xd;
      &quot;OId&quot;: &quot;85004d86-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g32&quot;,&#xd;
      &quot;OId&quot;: &quot;85114852-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g33&quot;,&#xd;
      &quot;OId&quot;: &quot;851ed2b0-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g34&quot;,&#xd;
      &quot;OId&quot;: &quot;852c697a-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g35&quot;,&#xd;
      &quot;OId&quot;: &quot;8539f716-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g36&quot;,&#xd;
      &quot;OId&quot;: &quot;85478d9a-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g37&quot;,&#xd;
      &quot;OId&quot;: &quot;85551d2a-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g38&quot;,&#xd;
      &quot;OId&quot;: &quot;85628eba-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g39&quot;,&#xd;
      &quot;OId&quot;: &quot;85703c0e-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g40&quot;,&#xd;
      &quot;OId&quot;: &quot;857dd256-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g41&quot;,&#xd;
      &quot;OId&quot;: &quot;858b68da-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g42&quot;,&#xd;
      &quot;OId&quot;: &quot;8598f248-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g43&quot;,&#xd;
      &quot;OId&quot;: &quot;85a68430-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g44&quot;,&#xd;
      &quot;OId&quot;: &quot;85b414b0-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g45&quot;,&#xd;
      &quot;OId&quot;: &quot;85c1ac7e-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g46&quot;,&#xd;
      &quot;OId&quot;: &quot;85cf3a1a-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g47&quot;,&#xd;
      &quot;OId&quot;: &quot;85dcc5b8-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g49&quot;,&#xd;
      &quot;OId&quot;: &quot;85f7ee56-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g50&quot;,&#xd;
      &quot;OId&quot;: &quot;8605673e-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g51&quot;,&#xd;
      &quot;OId&quot;: &quot;8613121c-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g53&quot;,&#xd;
      &quot;OId&quot;: &quot;862e3074-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g54&quot;,&#xd;
      &quot;OId&quot;: &quot;863bba00-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g55&quot;,&#xd;
      &quot;OId&quot;: &quot;864955b6-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g56&quot;,&#xd;
      &quot;OId&quot;: &quot;8656e136-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g57&quot;,&#xd;
      &quot;OId&quot;: &quot;86647c6a-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g58&quot;,&#xd;
      &quot;OId&quot;: &quot;867206a0-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;Default&quot;,&#xd;
      &quot;OId&quot;: &quot;ac224c82-259a-11e7-a8fd-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g59&quot;,&#xd;
      &quot;OId&quot;: &quot;aea4f774-25b4-11e7-872d-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g0&quot;,&#xd;
      &quot;OId&quot;: &quot;cff84508-259a-11e7-aa27-80ee73af4cf5&quot;&#xd;
    }&#xd;
  ]&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.165</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/user/add</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;aaaaaaaaaaaaaaaaaaaaaaaa&quot;);

int threadNum = ctx.getThreadNum();

log.info(&quot;threadNum =================== &quot; + threadNum);

int id = threadNum + 2001;

vars.put(&quot;frid1&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid1&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1266778930">(Success)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="user delete1" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;FRUserId&quot;: &quot;${frid1}&quot;&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.165</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/user/delete</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;aaaaaaaaaaaaaaaaaaa&quot;);

int threadNum = ctx.getThreadNum();
int loop = vars.getIteration();

log.info(&quot;threadNum =================== &quot; + threadNum);
log.info(&quot;loop =================== &quot; + loop);

int id = threadNum + 1 + 180 * (loop-1) ;


vars.put(&quot;frid1&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid1&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-730833104">(Success|Frusers matching query does not exist)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="userupdate1" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;FRUserId&quot;:&quot;9999&quot;,&#xd;
        &quot;Name&quot;:&quot;9999&quot;,&#xd;
        &quot;Gender&quot;: &quot;Female&quot;, &#xd;
        &quot;RFIDCard&quot;: &quot;&quot;, &#xd;
        &quot;State&quot;: &quot;Enable&quot;, &#xd;
        &quot;Age&quot;: 9999, &#xd;
        	 &quot;Groups&quot;: [&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83517d48-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g1&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;836791aa-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g2&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83751f28-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g3&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8382b598-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83904280-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;839dcc66-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g6&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83ab65c4-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83baad22-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g8&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83c83988-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g9&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83d5c9f4-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g10&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83e36276-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g11&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83f29b06-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g12&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;840038ec-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g13&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;840dacde-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g14&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;841b490c-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g15&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8428e422-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g16&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;843674ca-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g17&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;84440874-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g18&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8451a1fa-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g19&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;845f33c4-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g20&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;846cbc6a-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g21&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;847a5230-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g22&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8487e8be-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g23&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;84957858-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g24&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;84a2f2da-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g25&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;84b07a9a-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g26&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;84bfdabc-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g27&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;84d0c00c-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g28&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;84e00eb8-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g29&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;84f0f052-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g30&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85004d86-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g31&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85114852-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g32&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;851ed2b0-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g33&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;852c697a-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g34&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8539f716-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g35&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85478d9a-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g36&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85551d2a-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g37&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85628eba-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g38&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85703c0e-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g39&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;857dd256-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g40&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;858b68da-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g41&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8598f248-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g42&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85a68430-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g43&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85b414b0-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g44&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85c1ac7e-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g45&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85cf3a1a-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g46&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85dcc5b8-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g47&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85ea58cc-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g48&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85f7ee56-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g49&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8605673e-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g50&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8613121c-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g51&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8620a3aa-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g52&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;862e3074-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g53&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;863bba00-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g54&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;864955b6-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g55&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8656e136-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g56&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;86647c6a-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g57&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;867206a0-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g58&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;ac224c82-259a-11e7-a8fd-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;Default&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;aea4f774-25b4-11e7-872d-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g59&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;cff84508-259a-11e7-aa27-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g0&quot;&#xd;
    }&#xd;
  ]&#xd;
&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.165</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/user/update</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-202516509">Success</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="userlist1" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;Field&quot;: &quot;FRUserId&quot;, &#xd;
	&quot;Keyword&quot;: &quot;99&quot;, &#xd;
	&quot;FlipPage&quot;: 1&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.165</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/user/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">US</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.Users</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="group llist1" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.165</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/group/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">GS</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.Groups</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face add1" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/media/neon/HGST4TNAS/project/django/br06/backup/import_users/1500/fruserpic/12902_2.jpg" elementType="HTTPFileArg">
                <stringProp name="File.path">/media/neon/HGST4TNAS/project/django/br06/backup/import_users/1500/fruserpic/12902_2.jpg</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FRUserId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">12902</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FRUserId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.165</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/face/add</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1600976552">({&quot;Result&quot;: &quot;Success&quot;}|Error cause by Face already existed)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face delete1" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;FRUserId&quot;: &quot;${frid1}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.165</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/face/delete</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;aaaaaaaaaaaaaaaaaaaaaaaa&quot;);

int threadNum = ctx.getThreadNum();

log.info(&quot;threadNum =================== &quot; + threadNum);

int id = threadNum + 1;

vars.put(&quot;frid1&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid1&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1600976552">({&quot;Result&quot;: &quot;Success&quot;}|Error cause by Face already existed)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face list1" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;FRUserId&quot;: &quot;9999&quot;,&#xd;
    &quot;FaceIndex&quot;: 1&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.165</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/face/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face verify1" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/media/neon/HGST4TNAS/project/django/br06/backup/import_users/1500/fruserpic/12900_2.jpg" elementType="HTTPFileArg">
                <stringProp name="File.path">/media/neon/HGST4TNAS/project/django/br06/backup/import_users/1500/fruserpic/12900_2.jpg</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FRUserId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">12900</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FRUserId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.165</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/face/verify</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1508661142">{&quot;Result&quot;: &quot;Pass&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face_identify1" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/media/neon/HGST4TNAS/project/django/br06/backup/import_users/1500/fruserpic/12900_2.jpg" elementType="HTTPFileArg">
                <stringProp name="File.path">/media/neon/HGST4TNAS/project/django/br06/backup/import_users/1500/fruserpic/12900_2.jpg</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.165</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/face/identify</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">FRUserId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.FRUserId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rfid_verify1" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;RFIDCard&quot;:&quot;11199&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.165</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/RFID/verify</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">FID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.FRUserId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rfid_check1" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;RFIDCard&quot;:&quot;11199&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.165</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/RFID/check</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">				</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-33790176">{&quot;Result&quot;: &quot;Success&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Device Config Get1" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;MAC&quot;:&quot;80EE73BE42AD&quot;&#xd;
	}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.165</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/connection/get</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">Model</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.Model</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Device Config set1" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;Name&quot;: &quot;dev123&quot;, &#xd;
	&quot;Model&quot;: &quot;FR&quot;, &#xd;
	&quot;Language&quot;: &quot;en&quot;, &#xd;
	&quot;NTP&quot;: &quot;118.163.81.61&quot;, &#xd;
	&quot;FingerBioScore&quot;: &quot;Low&quot;, &#xd;
	&quot;AccessDeniedR0Pulse&quot;: &quot;1&quot;, &#xd;
	&quot;Timezone&quot;: &quot;(UTC) London, Dublin, Edinburgh, Lisbon&quot;, &#xd;
	&quot;AccessDeniedR0Action&quot;: &quot;None&quot;, &#xd;
	&quot;ScreenSaver&quot;: &quot;5&quot;, &#xd;
	&quot;FaceBioScore&quot;: &quot;Low&quot;, &#xd;
	&quot;WelcomeR1Pulse&quot;: &quot;1&quot;, &#xd;
	&quot;Result&quot;: &quot;Success&quot;, &#xd;
	&quot;Audio&quot;: &quot;Enable&quot;, &#xd;
	&quot;WelcomeR1Action&quot;: &quot;None&quot;, &#xd;
	&quot;WelcomeR0Action&quot;: &quot;None&quot;, &#xd;
	&quot;Timeout&quot;: &quot;10&quot;, &#xd;
	&quot;WelcomeR0Pulse&quot;: &quot;1&quot;,&#xd;
	&quot;Type&quot;: &quot;Register&quot;,&#xd;
	&quot;AccessDeniedR1Action&quot;: &quot;None&quot;,&#xd;
	&quot;AccessDeniedR1Pulse&quot;: &quot;1&quot;,&#xd;
	&quot;Version&quot;:&quot;1&quot;,&#xd;
	&quot;MAC&quot;:&quot;80EE73BE42B3&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.165</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/connection/set</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-33790176">{&quot;Result&quot;: &quot;Success&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定值計時器" enabled="false">
          <stringProp name="ConstantTimer.delay">1000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="檢視結果樹" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="218" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="迴圈控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">180</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <longProp name="ThreadGroup.start_time">1496404528000</longProp>
        <longProp name="ThreadGroup.end_time">1464868528000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="finger delete2" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;FRUserId&quot;:&quot;${frid2}&quot;&#xd;
	}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.218</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/finger/delete</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;bbbbbbbbbbbbbbbbbbb&quot;);

int threadNum = ctx.getThreadNum();
int loop = vars.getIteration();

log.info(&quot;threadNum =================== &quot; + threadNum);
log.info(&quot;loop =================== &quot; + loop);

int id = threadNum + 1 + 180 * loop ;
if (id &gt; 1499 ) {
	id = id -1499;
}

vars.put(&quot;frid2&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid2&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-202516509">Success</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="finger list2" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;FRUserId&quot;:&quot;${frid2}&quot;&#xd;
	}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.218</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/finger/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;bbbbbbbbbbbbbbbbbbb&quot;);

int threadNum = ctx.getThreadNum();
int loop = vars.getIteration();

log.info(&quot;threadNum =================== &quot; + threadNum);
log.info(&quot;loop =================== &quot; + loop);

int id = threadNum + 1 + 180 * loop ;
if (id &gt; 1499 ) {
	id = id -1499;
}

vars.put(&quot;frid2&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid2&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2615726">True</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="finger check2" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/mnt/smb/1876_1129140434445243_verify.bmp" elementType="HTTPFileArg">
                <stringProp name="File.path">/mnt/smb/1876_1129140434445243_verify.bmp</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FRUserId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${frid2}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FRUserId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.218</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/finger/check</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;bbbbbbbbbbbbbbbbbbb&quot;);

int threadNum = ctx.getThreadNum();
int loop = vars.getIteration();

log.info(&quot;threadNum =================== &quot; + threadNum);
log.info(&quot;loop =================== &quot; + loop);

int id = threadNum + 1 + 180 * loop ;
if (id &gt; 1499 ) {
	id = id -1499;
}

vars.put(&quot;frid2&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid2&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-253666766">FRUserId</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="finger verify2" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/mnt/smb/1876_1129140434445243_verify.bmp" elementType="HTTPFileArg">
                <stringProp name="File.path">/mnt/smb/1876_1129140434445243_verify.bmp</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FRUserId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${frid2}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FRUserId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.218</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/finger/verify</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;bbbbbbbbbbbbbbbbbbb&quot;);

int threadNum = ctx.getThreadNum();
int loop = vars.getIteration();

log.info(&quot;threadNum =================== &quot; + threadNum);
log.info(&quot;loop =================== &quot; + loop);

int id = threadNum + 1 + 180 * loop ;
if (id &gt; 1499 ) {
	id = id -1499;
}

vars.put(&quot;frid2&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid2&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-253666766">FRUserId</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="finger add2" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/mnt/smb/1876_1129140434445243_verify.bmp" elementType="HTTPFileArg">
                <stringProp name="File.path">/mnt/smb/1876_1129140434445243_verify.bmp</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FRUserId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${frid2}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FRUserId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.218</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/finger/add</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;bbbbbbbbbbbbbbbbbbb&quot;);

int threadNum = ctx.getThreadNum();
int loop = vars.getIteration();

log.info(&quot;threadNum =================== &quot; + threadNum);
log.info(&quot;loop =================== &quot; + loop);

int id = threadNum + 1 + 180 * loop ;
if (id &gt; 1499 ) {
	id = id -1499;
}

vars.put(&quot;frid2&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid2&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1473007141">({&quot;Result&quot;: &quot;Success&quot;}|Fingerprint already exists)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face add2" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/media/neon/HGST4TNAS/project/django/br06/backup/import_users/1500/fruserpic/12900_2.jpg" elementType="HTTPFileArg">
                <stringProp name="File.path">/media/neon/HGST4TNAS/project/django/br06/backup/import_users/1500/fruserpic/12900_2.jpg</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FRUserId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${frid2}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FRUserId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.218</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/face/add</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;bbbbbbbbbbbbbbbbbbbbb&quot;);

int threadNum = ctx.getThreadNum();

log.info(&quot;threadNum =================== &quot; + threadNum);

int id = threadNum + 501;

vars.put(&quot;frid2&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid2&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="user add2" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;FRUserId&quot;:&quot;${frid2}&quot;,&#xd;
        &quot;Name&quot;:&quot;${frid2}&quot;,&#xd;
        &quot;Gender&quot;: &quot;Female&quot;, &#xd;
        &quot;RFIDCard&quot;: &quot;${frid2}&quot;, &#xd;
        &quot;State&quot;: &quot;Enable&quot;, &#xd;
        &quot;Age&quot;: 9999999, &#xd;
        &quot;Groups&quot;: [&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g1&quot;,&#xd;
      &quot;OId&quot;: &quot;83517d48-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g2&quot;,&#xd;
      &quot;OId&quot;: &quot;836791aa-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g3&quot;,&#xd;
      &quot;OId&quot;: &quot;83751f28-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g4&quot;,&#xd;
      &quot;OId&quot;: &quot;8382b598-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g5&quot;,&#xd;
      &quot;OId&quot;: &quot;83904280-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g6&quot;,&#xd;
      &quot;OId&quot;: &quot;839dcc66-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g7&quot;,&#xd;
      &quot;OId&quot;: &quot;83ab65c4-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g8&quot;,&#xd;
      &quot;OId&quot;: &quot;83baad22-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g9&quot;,&#xd;
      &quot;OId&quot;: &quot;83c83988-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g10&quot;,&#xd;
      &quot;OId&quot;: &quot;83d5c9f4-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g11&quot;,&#xd;
      &quot;OId&quot;: &quot;83e36276-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g12&quot;,&#xd;
      &quot;OId&quot;: &quot;83f29b06-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g13&quot;,&#xd;
      &quot;OId&quot;: &quot;840038ec-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g14&quot;,&#xd;
      &quot;OId&quot;: &quot;840dacde-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g15&quot;,&#xd;
      &quot;OId&quot;: &quot;841b490c-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g16&quot;,&#xd;
      &quot;OId&quot;: &quot;8428e422-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g17&quot;,&#xd;
      &quot;OId&quot;: &quot;843674ca-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g18&quot;,&#xd;
      &quot;OId&quot;: &quot;84440874-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g19&quot;,&#xd;
      &quot;OId&quot;: &quot;8451a1fa-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g20&quot;,&#xd;
      &quot;OId&quot;: &quot;845f33c4-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g21&quot;,&#xd;
      &quot;OId&quot;: &quot;846cbc6a-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g22&quot;,&#xd;
      &quot;OId&quot;: &quot;847a5230-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g23&quot;,&#xd;
      &quot;OId&quot;: &quot;8487e8be-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g24&quot;,&#xd;
      &quot;OId&quot;: &quot;84957858-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g25&quot;,&#xd;
      &quot;OId&quot;: &quot;84a2f2da-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g26&quot;,&#xd;
      &quot;OId&quot;: &quot;84b07a9a-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g27&quot;,&#xd;
      &quot;OId&quot;: &quot;84bfdabc-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g28&quot;,&#xd;
      &quot;OId&quot;: &quot;84d0c00c-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g29&quot;,&#xd;
      &quot;OId&quot;: &quot;84e00eb8-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g30&quot;,&#xd;
      &quot;OId&quot;: &quot;84f0f052-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g31&quot;,&#xd;
      &quot;OId&quot;: &quot;85004d86-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g32&quot;,&#xd;
      &quot;OId&quot;: &quot;85114852-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g33&quot;,&#xd;
      &quot;OId&quot;: &quot;851ed2b0-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g34&quot;,&#xd;
      &quot;OId&quot;: &quot;852c697a-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g35&quot;,&#xd;
      &quot;OId&quot;: &quot;8539f716-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g36&quot;,&#xd;
      &quot;OId&quot;: &quot;85478d9a-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g37&quot;,&#xd;
      &quot;OId&quot;: &quot;85551d2a-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g38&quot;,&#xd;
      &quot;OId&quot;: &quot;85628eba-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g39&quot;,&#xd;
      &quot;OId&quot;: &quot;85703c0e-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g40&quot;,&#xd;
      &quot;OId&quot;: &quot;857dd256-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g41&quot;,&#xd;
      &quot;OId&quot;: &quot;858b68da-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g42&quot;,&#xd;
      &quot;OId&quot;: &quot;8598f248-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g43&quot;,&#xd;
      &quot;OId&quot;: &quot;85a68430-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g44&quot;,&#xd;
      &quot;OId&quot;: &quot;85b414b0-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g45&quot;,&#xd;
      &quot;OId&quot;: &quot;85c1ac7e-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g46&quot;,&#xd;
      &quot;OId&quot;: &quot;85cf3a1a-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g47&quot;,&#xd;
      &quot;OId&quot;: &quot;85dcc5b8-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g49&quot;,&#xd;
      &quot;OId&quot;: &quot;85f7ee56-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g50&quot;,&#xd;
      &quot;OId&quot;: &quot;8605673e-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g51&quot;,&#xd;
      &quot;OId&quot;: &quot;8613121c-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g53&quot;,&#xd;
      &quot;OId&quot;: &quot;862e3074-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g54&quot;,&#xd;
      &quot;OId&quot;: &quot;863bba00-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g55&quot;,&#xd;
      &quot;OId&quot;: &quot;864955b6-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g56&quot;,&#xd;
      &quot;OId&quot;: &quot;8656e136-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g57&quot;,&#xd;
      &quot;OId&quot;: &quot;86647c6a-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g58&quot;,&#xd;
      &quot;OId&quot;: &quot;867206a0-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;Default&quot;,&#xd;
      &quot;OId&quot;: &quot;ac224c82-259a-11e7-a8fd-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g59&quot;,&#xd;
      &quot;OId&quot;: &quot;aea4f774-25b4-11e7-872d-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g0&quot;,&#xd;
      &quot;OId&quot;: &quot;cff84508-259a-11e7-aa27-80ee73af4cf5&quot;&#xd;
    }&#xd;
  ]&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.218</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/user/add</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1266778930">(Success)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;bbbbbbbbbbbbbbbbbbb&quot;);

int threadNum = ctx.getThreadNum();

log.info(&quot;threadNum =================== &quot; + threadNum);

int id = threadNum + 4001;

vars.put(&quot;frid2&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid2&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="user delete2" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;FRUserId&quot;: &quot;${frid2}&quot;&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.218</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/user/delete</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-730833104">(Success|Frusers matching query does not exist)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;bbbbbbbbbbbbbbbbbbb&quot;);

int threadNum = ctx.getThreadNum();
int loop = vars.getIteration();

log.info(&quot;threadNum =================== &quot; + threadNum);
log.info(&quot;loop =================== &quot; + loop);

int id = threadNum + 1801 + 180 * (loop-1) ;

vars.put(&quot;frid2&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid2&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="userupdate2" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;FRUserId&quot;:&quot;9999&quot;,&#xd;
        &quot;Name&quot;:&quot;9999&quot;,&#xd;
        &quot;Gender&quot;: &quot;Female&quot;, &#xd;
        &quot;RFIDCard&quot;: &quot;&quot;, &#xd;
        &quot;State&quot;: &quot;Enable&quot;, &#xd;
        &quot;Age&quot;: 9999, &#xd;
        	 &quot;Groups&quot;: [&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83517d48-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g1&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;836791aa-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g2&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83751f28-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g3&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8382b598-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83904280-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;839dcc66-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g6&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83ab65c4-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83baad22-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g8&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83c83988-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g9&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83d5c9f4-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g10&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83e36276-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g11&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83f29b06-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g12&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;840038ec-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g13&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;840dacde-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g14&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;841b490c-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g15&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8428e422-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g16&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;843674ca-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g17&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;84440874-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g18&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8451a1fa-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g19&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;845f33c4-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g20&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;846cbc6a-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g21&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;847a5230-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g22&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8487e8be-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g23&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;84957858-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g24&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;84a2f2da-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g25&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;84b07a9a-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g26&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;84bfdabc-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g27&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;84d0c00c-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g28&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;84e00eb8-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g29&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;84f0f052-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g30&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85004d86-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g31&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85114852-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g32&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;851ed2b0-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g33&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;852c697a-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g34&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8539f716-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g35&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85478d9a-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g36&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85551d2a-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g37&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85628eba-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g38&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85703c0e-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g39&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;857dd256-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g40&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;858b68da-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g41&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8598f248-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g42&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85a68430-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g43&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85b414b0-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g44&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85c1ac7e-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g45&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85cf3a1a-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g46&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85dcc5b8-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g47&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85ea58cc-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g48&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85f7ee56-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g49&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8605673e-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g50&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8613121c-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g51&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8620a3aa-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g52&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;862e3074-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g53&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;863bba00-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g54&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;864955b6-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g55&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8656e136-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g56&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;86647c6a-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g57&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;867206a0-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g58&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;ac224c82-259a-11e7-a8fd-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;Default&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;aea4f774-25b4-11e7-872d-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g59&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;cff84508-259a-11e7-aa27-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g0&quot;&#xd;
    }&#xd;
  ]&#xd;
&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.218</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/user/update</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-202516509">Success</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="userlist2" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;Field&quot;: &quot;FRUserId&quot;, &#xd;
	&quot;Keyword&quot;: &quot;99&quot;, &#xd;
	&quot;FlipPage&quot;: 1&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.218</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/user/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">US</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.Users</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="group llist2" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.218</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/group/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">GS</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.Groups</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face add2" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/neon/下載/0413/0033_1_20170221134844.jpg" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/neon/下載/0413/0033_1_20170221134844.jpg</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FRUserId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">12901</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FRUserId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.218</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/face/add</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1600976552">({&quot;Result&quot;: &quot;Success&quot;}|Error cause by Face already existed)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face delete2" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;FRUserId&quot;: &quot;${frid2}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.218</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/face/delete</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;bbbbbbbbbbbbbbbbbbbbb&quot;);

int threadNum = ctx.getThreadNum();

log.info(&quot;threadNum =================== &quot; + threadNum);

int id = threadNum + 501;

vars.put(&quot;frid2&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid2&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1600976552">({&quot;Result&quot;: &quot;Success&quot;}|Error cause by Face already existed)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face list2" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;FRUserId&quot;: &quot;99999&quot;,&#xd;
    &quot;FaceIndex&quot;: 1&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.218</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/face/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face verify2" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/media/neon/HGST4TNAS/project/django/br06/backup/import_users/1500/fruserpic/12900_2.jpg" elementType="HTTPFileArg">
                <stringProp name="File.path">/media/neon/HGST4TNAS/project/django/br06/backup/import_users/1500/fruserpic/12900_2.jpg</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FRUserId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">12900</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FRUserId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.218</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/face/verify</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1508661142">{&quot;Result&quot;: &quot;Pass&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face_identify2" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/media/neon/HGST4TNAS/project/django/br06/backup/import_users/1500/fruserpic/12900_2.jpg" elementType="HTTPFileArg">
                <stringProp name="File.path">/media/neon/HGST4TNAS/project/django/br06/backup/import_users/1500/fruserpic/12900_2.jpg</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.218</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/face/identify</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">FRUserId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.FRUserId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rfid_verify2" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;RFIDCard&quot;:&quot;11199&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.218</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/RFID/verify</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">FID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.FRUserId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rfid_check2" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;RFIDCard&quot;:&quot;11199&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.218</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/RFID/check</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">				</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-33790176">{&quot;Result&quot;: &quot;Success&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Device Config Get2" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;MAC&quot;:&quot;NEONA&quot;&#xd;
	}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.218</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/connection/get</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">Model</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.Model</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Device Config set 2" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;Name&quot;: &quot;neon_a2&quot;, &#xd;
	&quot;Model&quot;: &quot;FR&quot;, &#xd;
	&quot;Language&quot;: &quot;en&quot;, &#xd;
	&quot;NTP&quot;: &quot;118.163.81.61&quot;, &#xd;
	&quot;FingerBioScore&quot;: &quot;Low&quot;, &#xd;
	&quot;AccessDeniedR0Pulse&quot;: &quot;1&quot;, &#xd;
	&quot;Timezone&quot;: &quot;(UTC) London, Dublin, Edinburgh, Lisbon&quot;, &#xd;
	&quot;AccessDeniedR0Action&quot;: &quot;None&quot;, &#xd;
	&quot;ScreenSaver&quot;: &quot;5&quot;, &#xd;
	&quot;FaceBioScore&quot;: &quot;Low&quot;, &#xd;
	&quot;WelcomeR1Pulse&quot;: &quot;1&quot;, &#xd;
	&quot;Result&quot;: &quot;Success&quot;, &#xd;
	&quot;Audio&quot;: &quot;Enable&quot;, &#xd;
	&quot;WelcomeR1Action&quot;: &quot;None&quot;, &#xd;
	&quot;WelcomeR0Action&quot;: &quot;None&quot;, &#xd;
	&quot;Timeout&quot;: &quot;10&quot;, &#xd;
	&quot;WelcomeR0Pulse&quot;: &quot;1&quot;,&#xd;
	&quot;Type&quot;: &quot;Register&quot;,&#xd;
	&quot;AccessDeniedR1Action&quot;: &quot;None&quot;,&#xd;
	&quot;AccessDeniedR1Pulse&quot;: &quot;1&quot;,&#xd;
	&quot;Version&quot;:&quot;1&quot;,&#xd;
	&quot;MAC&quot;:&quot;NEONA2&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.218</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/connection/set</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-33790176">{&quot;Result&quot;: &quot;Success&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定值計時器" enabled="false">
          <stringProp name="ConstantTimer.delay">1000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="檢視結果樹" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="143" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="迴圈控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">180</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <longProp name="ThreadGroup.start_time">1496404528000</longProp>
        <longProp name="ThreadGroup.end_time">1464868528000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="finger delete3" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;FRUserId&quot;:&quot;${frid3}&quot;&#xd;
	}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.143</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/finger/delete</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;ccccccccccccccc&quot;);

int threadNum = ctx.getThreadNum();
int loop = vars.getIteration();

log.info(&quot;threadNum =================== &quot; + threadNum);
log.info(&quot;loop =================== &quot; + loop);

int id = threadNum + 1 + 180 * (loop+1) ;
if (id &gt; 1499 ) {
	id = id -1499;
}

vars.put(&quot;frid3&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid3&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-202516509">Success</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="finger list3" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;FRUserId&quot;:&quot;${frid3}&quot;&#xd;
	}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.143</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/finger/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;ccccccccccccccc&quot;);

int threadNum = ctx.getThreadNum();
int loop = vars.getIteration();

log.info(&quot;threadNum =================== &quot; + threadNum);
log.info(&quot;loop =================== &quot; + loop);

int id = threadNum + 1 + 180 * (loop+1) ;
if (id &gt; 1499 ) {
	id = id -1499;
}

vars.put(&quot;frid3&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid3&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2615726">True</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="finger check3" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/mnt/smb/1876_1129140434445243_verify.bmp" elementType="HTTPFileArg">
                <stringProp name="File.path">/mnt/smb/1876_1129140434445243_verify.bmp</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FRUserId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${frid3}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FRUserId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.143</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/finger/check</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;ccccccccccccccc&quot;);

int threadNum = ctx.getThreadNum();
int loop = vars.getIteration();

log.info(&quot;threadNum =================== &quot; + threadNum);
log.info(&quot;loop =================== &quot; + loop);

int id = threadNum + 1 + 180 * (loop+1) ;
if (id &gt; 1499 ) {
	id = id -1499;
}

vars.put(&quot;frid3&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid3&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-253666766">FRUserId</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="finger verify3" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/mnt/smb/1876_1129140434445243_verify.bmp" elementType="HTTPFileArg">
                <stringProp name="File.path">/mnt/smb/1876_1129140434445243_verify.bmp</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FRUserId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${frid3}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FRUserId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.143</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/finger/verify</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;ccccccccccccccc&quot;);

int threadNum = ctx.getThreadNum();
int loop = vars.getIteration();

log.info(&quot;threadNum =================== &quot; + threadNum);
log.info(&quot;loop =================== &quot; + loop);

int id = threadNum + 1 + 180 * (loop+1) ;
if (id &gt; 1499 ) {
	id = id -1499;
}

vars.put(&quot;frid3&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid3&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-253666766">FRUserId</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="finger add3" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/mnt/smb/1876_1129140434445243_verify.bmp" elementType="HTTPFileArg">
                <stringProp name="File.path">/mnt/smb/1876_1129140434445243_verify.bmp</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FRUserId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${frid3}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FRUserId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.143</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/finger/add</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;ccccccccccccccc&quot;);

int threadNum = ctx.getThreadNum();
int loop = vars.getIteration();

log.info(&quot;threadNum =================== &quot; + threadNum);
log.info(&quot;loop =================== &quot; + loop);

int id = threadNum + 1 + 180 * (loop+1) ;
if (id &gt; 1499 ) {
	id = id -1499;
}

vars.put(&quot;frid3&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid3&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1473007141">({&quot;Result&quot;: &quot;Success&quot;}|Fingerprint already exists)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face add3" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/media/neon/HGST4TNAS/project/django/br06/backup/import_users/1500/fruserpic/12900_2.jpg" elementType="HTTPFileArg">
                <stringProp name="File.path">/media/neon/HGST4TNAS/project/django/br06/backup/import_users/1500/fruserpic/12900_2.jpg</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FRUserId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${frid3}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FRUserId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.143</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/face/add</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;cccccccccccccccccccccccccccc&quot;);

int threadNum = ctx.getThreadNum();

log.info(&quot;threadNum =================== &quot; + threadNum);

int id = threadNum + 1001;

vars.put(&quot;frid3&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid3&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="user add3" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;FRUserId&quot;:&quot;${frid3}&quot;,&#xd;
        &quot;Name&quot;:&quot;${frid3}&quot;,&#xd;
        &quot;Gender&quot;: &quot;Female&quot;, &#xd;
        &quot;RFIDCard&quot;: &quot;${frid3}&quot;, &#xd;
        &quot;State&quot;: &quot;Enable&quot;, &#xd;
        &quot;Age&quot;: 9999999, &#xd;
        &quot;Groups&quot;: [&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g1&quot;,&#xd;
      &quot;OId&quot;: &quot;83517d48-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g2&quot;,&#xd;
      &quot;OId&quot;: &quot;836791aa-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g3&quot;,&#xd;
      &quot;OId&quot;: &quot;83751f28-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g4&quot;,&#xd;
      &quot;OId&quot;: &quot;8382b598-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g5&quot;,&#xd;
      &quot;OId&quot;: &quot;83904280-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g6&quot;,&#xd;
      &quot;OId&quot;: &quot;839dcc66-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g7&quot;,&#xd;
      &quot;OId&quot;: &quot;83ab65c4-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g8&quot;,&#xd;
      &quot;OId&quot;: &quot;83baad22-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g9&quot;,&#xd;
      &quot;OId&quot;: &quot;83c83988-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g10&quot;,&#xd;
      &quot;OId&quot;: &quot;83d5c9f4-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g11&quot;,&#xd;
      &quot;OId&quot;: &quot;83e36276-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g12&quot;,&#xd;
      &quot;OId&quot;: &quot;83f29b06-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g13&quot;,&#xd;
      &quot;OId&quot;: &quot;840038ec-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g14&quot;,&#xd;
      &quot;OId&quot;: &quot;840dacde-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g15&quot;,&#xd;
      &quot;OId&quot;: &quot;841b490c-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g16&quot;,&#xd;
      &quot;OId&quot;: &quot;8428e422-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g17&quot;,&#xd;
      &quot;OId&quot;: &quot;843674ca-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g18&quot;,&#xd;
      &quot;OId&quot;: &quot;84440874-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g19&quot;,&#xd;
      &quot;OId&quot;: &quot;8451a1fa-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g20&quot;,&#xd;
      &quot;OId&quot;: &quot;845f33c4-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g21&quot;,&#xd;
      &quot;OId&quot;: &quot;846cbc6a-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g22&quot;,&#xd;
      &quot;OId&quot;: &quot;847a5230-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g23&quot;,&#xd;
      &quot;OId&quot;: &quot;8487e8be-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g24&quot;,&#xd;
      &quot;OId&quot;: &quot;84957858-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g25&quot;,&#xd;
      &quot;OId&quot;: &quot;84a2f2da-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g26&quot;,&#xd;
      &quot;OId&quot;: &quot;84b07a9a-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g27&quot;,&#xd;
      &quot;OId&quot;: &quot;84bfdabc-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g28&quot;,&#xd;
      &quot;OId&quot;: &quot;84d0c00c-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g29&quot;,&#xd;
      &quot;OId&quot;: &quot;84e00eb8-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g30&quot;,&#xd;
      &quot;OId&quot;: &quot;84f0f052-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g31&quot;,&#xd;
      &quot;OId&quot;: &quot;85004d86-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g32&quot;,&#xd;
      &quot;OId&quot;: &quot;85114852-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g33&quot;,&#xd;
      &quot;OId&quot;: &quot;851ed2b0-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g34&quot;,&#xd;
      &quot;OId&quot;: &quot;852c697a-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g35&quot;,&#xd;
      &quot;OId&quot;: &quot;8539f716-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g36&quot;,&#xd;
      &quot;OId&quot;: &quot;85478d9a-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g37&quot;,&#xd;
      &quot;OId&quot;: &quot;85551d2a-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g38&quot;,&#xd;
      &quot;OId&quot;: &quot;85628eba-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g39&quot;,&#xd;
      &quot;OId&quot;: &quot;85703c0e-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g40&quot;,&#xd;
      &quot;OId&quot;: &quot;857dd256-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g41&quot;,&#xd;
      &quot;OId&quot;: &quot;858b68da-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g42&quot;,&#xd;
      &quot;OId&quot;: &quot;8598f248-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g43&quot;,&#xd;
      &quot;OId&quot;: &quot;85a68430-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g44&quot;,&#xd;
      &quot;OId&quot;: &quot;85b414b0-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g45&quot;,&#xd;
      &quot;OId&quot;: &quot;85c1ac7e-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g46&quot;,&#xd;
      &quot;OId&quot;: &quot;85cf3a1a-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g47&quot;,&#xd;
      &quot;OId&quot;: &quot;85dcc5b8-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g49&quot;,&#xd;
      &quot;OId&quot;: &quot;85f7ee56-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g50&quot;,&#xd;
      &quot;OId&quot;: &quot;8605673e-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g51&quot;,&#xd;
      &quot;OId&quot;: &quot;8613121c-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g53&quot;,&#xd;
      &quot;OId&quot;: &quot;862e3074-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g54&quot;,&#xd;
      &quot;OId&quot;: &quot;863bba00-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g55&quot;,&#xd;
      &quot;OId&quot;: &quot;864955b6-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g56&quot;,&#xd;
      &quot;OId&quot;: &quot;8656e136-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g57&quot;,&#xd;
      &quot;OId&quot;: &quot;86647c6a-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g58&quot;,&#xd;
      &quot;OId&quot;: &quot;867206a0-25b1-11e7-b303-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;Default&quot;,&#xd;
      &quot;OId&quot;: &quot;ac224c82-259a-11e7-a8fd-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g59&quot;,&#xd;
      &quot;OId&quot;: &quot;aea4f774-25b4-11e7-872d-80ee73af4cf5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Name&quot;: &quot;neon_g0&quot;,&#xd;
      &quot;OId&quot;: &quot;cff84508-259a-11e7-aa27-80ee73af4cf5&quot;&#xd;
    }&#xd;
  ]&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.143</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/user/add</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1266778930">(Success)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;ccccccccccccccccccc&quot;);

int threadNum = ctx.getThreadNum();

log.info(&quot;threadNum =================== &quot; + threadNum);

int id = threadNum + 6001;

vars.put(&quot;frid3&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid3&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="user delete3" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;FRUserId&quot;: &quot;${frid3}&quot;&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.143</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/user/delete</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;ccccccccccccccc&quot;);

int threadNum = ctx.getThreadNum();
int loop = vars.getIteration();

log.info(&quot;threadNum =================== &quot; + threadNum);
log.info(&quot;loop =================== &quot; + loop);

int id = threadNum + 3601 + 180 * (loop-1) ;

vars.put(&quot;frid3&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid3&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-730833104">(Success|Frusers matching query does not exist)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="userupdate3" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;FRUserId&quot;:&quot;9999&quot;,&#xd;
        &quot;Name&quot;:&quot;9999&quot;,&#xd;
        &quot;Gender&quot;: &quot;Female&quot;, &#xd;
        &quot;RFIDCard&quot;: &quot;&quot;, &#xd;
        &quot;State&quot;: &quot;Enable&quot;, &#xd;
        &quot;Age&quot;: 9999, &#xd;
        	 &quot;Groups&quot;: [&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83517d48-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g1&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;836791aa-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g2&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83751f28-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g3&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8382b598-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83904280-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g5&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;839dcc66-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g6&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83ab65c4-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g7&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83baad22-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g8&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83c83988-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g9&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83d5c9f4-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g10&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83e36276-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g11&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;83f29b06-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g12&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;840038ec-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g13&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;840dacde-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g14&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;841b490c-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g15&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8428e422-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g16&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;843674ca-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g17&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;84440874-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g18&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8451a1fa-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g19&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;845f33c4-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g20&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;846cbc6a-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g21&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;847a5230-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g22&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8487e8be-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g23&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;84957858-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g24&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;84a2f2da-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g25&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;84b07a9a-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g26&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;84bfdabc-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g27&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;84d0c00c-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g28&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;84e00eb8-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g29&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;84f0f052-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g30&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85004d86-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g31&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85114852-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g32&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;851ed2b0-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g33&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;852c697a-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g34&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8539f716-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g35&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85478d9a-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g36&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85551d2a-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g37&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85628eba-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g38&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85703c0e-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g39&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;857dd256-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g40&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;858b68da-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g41&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8598f248-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g42&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85a68430-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g43&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85b414b0-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g44&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85c1ac7e-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g45&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85cf3a1a-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g46&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85dcc5b8-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g47&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85ea58cc-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g48&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;85f7ee56-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g49&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8605673e-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g50&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8613121c-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g51&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8620a3aa-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g52&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;862e3074-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g53&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;863bba00-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g54&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;864955b6-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g55&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;8656e136-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g56&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;86647c6a-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g57&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;867206a0-25b1-11e7-b303-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g58&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;ac224c82-259a-11e7-a8fd-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;Default&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;aea4f774-25b4-11e7-872d-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g59&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;OId&quot;: &quot;cff84508-259a-11e7-aa27-80ee73af4cf5&quot;,&#xd;
      &quot;Name&quot;: &quot;neon_g0&quot;&#xd;
    }&#xd;
  ]&#xd;
&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.143</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/user/update</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-202516509">Success</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="userlist3" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;Field&quot;: &quot;FRUserId&quot;, &#xd;
	&quot;Keyword&quot;: &quot;99&quot;, &#xd;
	&quot;FlipPage&quot;: 1&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.143</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/user/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">US</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.Users</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="group llist3" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.143</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/group/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">GS</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.Groups</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face add3" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/media/neon/HGST4TNAS/project/django/br06/backup/import_users/1500/fruserpic/12900_2.jpg" elementType="HTTPFileArg">
                <stringProp name="File.path">/media/neon/HGST4TNAS/project/django/br06/backup/import_users/1500/fruserpic/12900_2.jpg</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FRUserId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">12900</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FRUserId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.143</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/face/add</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1600976552">({&quot;Result&quot;: &quot;Success&quot;}|Error cause by Face already existed)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face delete3" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;FRUserId&quot;: &quot;${frid3}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.143</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/face/delete</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;cccccccccccccccccccccccccccc&quot;);

int threadNum = ctx.getThreadNum();

log.info(&quot;threadNum =================== &quot; + threadNum);

int id = threadNum + 1001;

vars.put(&quot;frid3&quot;,  Integer.toString(id));
log.info(&quot;FRUserID-------------------------------------&quot; + vars.get(&quot;frid3&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1600976552">({&quot;Result&quot;: &quot;Success&quot;}|Error cause by Face already existed)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face list3" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;FRUserId&quot;: &quot;999999&quot;,&#xd;
    &quot;FaceIndex&quot;: 1&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.143</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/face/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face verify3" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/media/neon/HGST4TNAS/project/django/br06/backup/import_users/1500/fruserpic/12900_2.jpg" elementType="HTTPFileArg">
                <stringProp name="File.path">/media/neon/HGST4TNAS/project/django/br06/backup/import_users/1500/fruserpic/12900_2.jpg</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FRUserId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">12900</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FRUserId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.143</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/face/verify</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1508661142">{&quot;Result&quot;: &quot;Pass&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face_identify3" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/media/neon/HGST4TNAS/project/django/br06/backup/import_users/1500/fruserpic/12900_2.jpg" elementType="HTTPFileArg">
                <stringProp name="File.path">/media/neon/HGST4TNAS/project/django/br06/backup/import_users/1500/fruserpic/12900_2.jpg</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.143</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/face/identify</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">FRUserId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.FRUserId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rfid_verify3" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;RFIDCard&quot;:&quot;11199&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.143</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/RFID/verify</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">FID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.FRUserId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rfid_check3" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;RFIDCard&quot;:&quot;11199&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.143</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/RFID/check</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">				</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-33790176">{&quot;Result&quot;: &quot;Success&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Device Config Get3" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;MAC&quot;:&quot;NEONA2&quot;&#xd;
	}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.143</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/connection/get</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">Model</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.Model</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Device Config set3" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;Name&quot;: &quot;neon_a&quot;, &#xd;
	&quot;Model&quot;: &quot;FR&quot;, &#xd;
	&quot;Language&quot;: &quot;en&quot;, &#xd;
	&quot;NTP&quot;: &quot;118.163.81.61&quot;, &#xd;
	&quot;FingerBioScore&quot;: &quot;Low&quot;, &#xd;
	&quot;AccessDeniedR0Pulse&quot;: &quot;1&quot;, &#xd;
	&quot;Timezone&quot;: &quot;(UTC) London, Dublin, Edinburgh, Lisbon&quot;, &#xd;
	&quot;AccessDeniedR0Action&quot;: &quot;None&quot;, &#xd;
	&quot;ScreenSaver&quot;: &quot;5&quot;, &#xd;
	&quot;FaceBioScore&quot;: &quot;Low&quot;, &#xd;
	&quot;WelcomeR1Pulse&quot;: &quot;1&quot;, &#xd;
	&quot;Result&quot;: &quot;Success&quot;, &#xd;
	&quot;Audio&quot;: &quot;Enable&quot;, &#xd;
	&quot;WelcomeR1Action&quot;: &quot;None&quot;, &#xd;
	&quot;WelcomeR0Action&quot;: &quot;None&quot;, &#xd;
	&quot;Timeout&quot;: &quot;10&quot;, &#xd;
	&quot;WelcomeR0Pulse&quot;: &quot;1&quot;,&#xd;
	&quot;Type&quot;: &quot;Register&quot;,&#xd;
	&quot;AccessDeniedR1Action&quot;: &quot;None&quot;,&#xd;
	&quot;AccessDeniedR1Pulse&quot;: &quot;1&quot;,&#xd;
	&quot;Version&quot;:&quot;1&quot;,&#xd;
	&quot;MAC&quot;:&quot;NEONA&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.143</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/connection/set</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-33790176">{&quot;Result&quot;: &quot;Success&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face verify3" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/neon/下載/0413/0033_2_20170221134845.jpg" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/neon/下載/0413/0033_2_20170221134845.jpg</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FRUserId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">9999</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FRUserId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.143</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/face/verify</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="驗證回覆" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1508661142">{&quot;Result&quot;: &quot;Pass&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="face_identify3" enabled="false">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/neon/下載/0413/0033_2_20170221134845.jpg" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/neon/下載/0413/0033_2_20170221134845.jpg</stringProp>
                <stringProp name="File.paramname">image</stringProp>
                <stringProp name="File.mimetype">image/jpg</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.100.143</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/recognition/face/identify</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">FRUserId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.FRUserId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定值計時器" enabled="false">
          <stringProp name="ConstantTimer.delay">1000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="檢視結果樹" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="彙整報告" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="彙整報告" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="檢視結果樹" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定值計時器" enabled="true">
        <stringProp name="ConstantTimer.delay">1000</stringProp>
      </ConstantTimer>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
